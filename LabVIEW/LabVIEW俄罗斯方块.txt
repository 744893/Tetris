大家好，本期视频是俄罗斯方块-LabVIEW
第一次编写俄罗斯方块，还选了地狱级难度的LabVIEW
因此拖更了挺久
尝试过各种方式之后，发现还是记事本讲解方式比较舒服
后期也可以倍速，或者把文档也上传，即使要加字幕也可以作为原材料
不多说，进入正题，先演示效果
有一些无关痛痒的BUG，不过终于算是基本能玩了
因此开始录制视频吧
共计11个文件，代码已上传 https://github.com/hhelibebc/Tetris
也可以查看VI层次结构
先从最底层看起，实现不同形状的方块的表示
主要有图示7类方块，每类有1、2、4种不等的变形
为了区分，给每类方块以不同颜色
把同类方块数据(布尔数组)和它们的颜色(颜色盒常量)用簇封装起来
布尔数组中，T表示此位置为实体，采用本类方块颜色填充，F表示
此位置为空，用背景色(白色)表示
然后把7个簇再打包成一个簇输出
对了，总共有4*3+2*3+1=19种不同的形状
选择方块VI：
输入方块的ID(0~18)，输出对应的方块，和方块的行列数
此处输出的方块已经是颜色盒数组了，而不是布尔数组
先根据ID输出唯一的布尔数组和对应的颜色
然后将布尔数组和颜色转化为颜色盒数组输出
再额外输出其行列数
主程序VI：
大致分为3块：顺序结构第一帧：变量初始化；顺序结构第二帧，主体逻辑；
外面的while循环：按键检测、处理
按键检测条件结构共5个分支：上、下、左、右、默认
左右键移动方块，上键变形，下键直接落到底部
并接受此方块动作，下一次主循环将计算消除并产生新的方块
上键变形：就是查表改变方块ID而已，然后将旧方块清空，绘制新的方块
这个表是根据选择方块VI里面的顺序建立的
变形的旋转方向是顺时针
程序主体逻辑在顺序结构第二帧的while循环里面
难度由循环延时决定，时间单位毫秒，越短越难
这里没做变难度，大家想加可以随游戏进程不断变难直至最难等等
状态2表示当前方块是否还能移动
为真表示还可以继续下落
先判断偏移量是否越界，是否到达地图底部
如果不小于15(y方向格数，即到底底部)，则将状态2写入假，不改变数组
下一次循环将进入假分支
如果偏移量y小于15，先判断能否继续下落(地图边界允许，但可能下方已经被方块占据，并不允许下落)，获取允许最大下落距离
如果为0，同上；如不为0，将当前方块下移一格
绘制方块(多块)VI:输入4个参数，总数组，待绘制方块，原位置，新位置，输出总数组。即将待绘制方块在总数组中的位置更新
这里做了一点简化(省略)，先判断新位置和原位置相比是纵向移动还是横向移动，如果y相等，则直接清除原位置，绘制至新位置
如果y不相等，则绘制的时候需考虑待绘制方块的空白区域，应不覆盖总数组已有的数据，即图中方块下移一格时，与已有图形可契合时不应覆盖、消除已有的左边的黄色色块
而横向移动的判断被我省略了，不允许这么操作，红色色块直接被覆盖了
区域清除：用背景色覆盖指定位置、指定大小的区域，实际上就是转调用数组选板的初始化数组和替换数组子集
最大下移距离：思路是：逐列判断每一列最多能下移多少格，然后取多列的最小值，如果不这样一定会造成图形覆盖的致命BUG
如图，第一列可以下移10格，第二列可以下移12格，如果下移12格，则黄色部分第一列将被绿色覆盖，显然不合理
如果添加一个天蓝色方块，则分别可下移10格、1格，输出应为1格，可以理解
再添加一个粉红色方块，则最大下移距离应为0，不应移动
没问题
这里面是纯逻辑，仅用到一个获取数组行列数的子VI，不痛不痒的
顺便提一句，这段逻辑差点没写死我，For循环套while循环套条件结构，隧道索引加移位寄存器
每列计算最大下移距离的算法：先判断数组2的下一行是否为空，不为空直接结束while循环，此时计数应为初值0，而0必定是所有列最小的，因此最终输出也为0
否则先在颜色由非空(除了白色)变为空(白色)时将计数置1，在颜色由空变为非空时退出while
期间(颜色保持为空时)计数自增，当然判断位置越过数组边界时也要退出while循环
这样便能计算每列的最大下移距离，即最后非空位置，到下方第一个非空位置中间的空白格数，最后再对每列的结果取最小值输出
如图，最大下移距离为5
状态2为假时，即单个方块停止移动
先判断整个游戏是否结束，如果方块刚创建就无法下移，则游戏结束
即填满了游戏区
否则进行如下处理：
消除并更新显示(数组)
根据消除行数累加得分
在(4,0)位置生成新的方块，ID由随机数得到
随机数用的贪吃蛇那个
消除.vi:。。。
思路如下：从底部往上索引数组每一行，如果为满行，则记录下位置，
然后删掉这些行，最后在数组顶部插入等量的空行，根据删掉的行数输出得分(当然，也是查表)
为什么从底部往上遍历：因为我们满行都在下方，而且大多数情况上方会有很多空行，空行上方不可能有非空的行，因此遍历可以遇到空行就结束
为什么要记录位置再删除而不直接删除：直接删除会导致行在数组中的相对位置改变，会影响接下来的操作，而且统一处理比较直观，甚至可能提高效率
图示情况，将消除倒数第一行和倒数第三行，而根据定义，消除两行将得到30分
其中用到了判断单行.vi
判断一行是否为满行、空行
如图为空行
非空、非满
满行
大概就这样吧，真的是第一次编写俄罗斯方块，我太难了
后续再水一个matlab版本，也有可能是我LabVIEW学得不太好，但LabVIEW的不方便是实际存在的，matlab的话就会方便很多，我也属性很多
加内，拜拜























































































